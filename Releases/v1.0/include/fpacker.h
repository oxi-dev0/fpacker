// Copyright (c) 2022 Oxi. All rights reserved.
#pragma once

#define FJOINER_HEADER 0x46,0x4A,0x4F,0x49,0x4E,0x45,0x52,0x5F,0x50,0x41,0x43,0x4B,0x41,0x47,0x45
#define FJOINER_NAMEMARKER 0x46,0x4A,0x4F,0x49,0x4E,0x45,0x52,0x5F,0x4E,0x41,0x4D,0x45,0x4D,0x41,0x52,0x4B,0x45,0x52
#define FJOINER_FILEMARKER 0x46,0x4A,0x4F,0x49,0x4E,0x45,0x52,0x5F,0x46,0x49,0x4C,0x45,0x4D,0x41,0x52,0x4B,0x45,0x52
#define FJOINER_SIZEMARKER 0x46,0x4A,0x4F,0x49,0x4E,0x45,0x52,0x5F,0x53,0x49,0x5A,0x45,0x4D,0x41,0x52,0x4B,0x45,0x52

#define FJOINER_HEADER_LENGTH 15
#define FJOINER_NAMEMARKER_LENGTH 18
#define FJOINER_FILEMARKER_LENGTH 18
#define FJOINER_SIZEMARKER_LENGTH 18

#include <string>
#include <vector>
#include <filesystem>
#include <cassert>
#include <fstream>
#include <sstream>
#include <iomanip>

namespace FPacker
{
	class Package {
	protected:
		std::string fromDir;
		std::string fromFile;

	private:
		static bool ValidPackage(std::vector<char> buf);
		static bool LookaheadMatch(std::vector<char> buf, int cursor, std::vector<char> seq);

	public:
		static Package LoadDir(std::string dir);
		static Package LoadPackageFile(std::string file);
		
		bool Pack(std::string targetFile);
		bool Unpack(std::string targetDir);
	};
}